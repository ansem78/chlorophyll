/*

  PADDING, MARGIN

  Base:
    p = padding
    m = margin

  Modifiers:
    (none) = all
    t = top
    e = end (right: ltr, left: rtl)
    b = bottom
    s = start (left: ltr, right: rtl)
    x = horizontal (right and left)
    y = vertical (top and bottom)

*/

@use '../config';
@use '../helpers';
@use '../mixins';

$spacers: config.$spacers;
$negative-spacers: if(config.$enable-negative-margins, helpers.negativify-map($spacers), null);
$breakpoints: map-keys(config.$breakpoints);

@each $name in $breakpoints {

  @include mixins.media-breakpoint-up($name) {

    $infix: mixins.breakpoint-infix($name);

    @each $n, $size in $spacers {

      // Paddings.

      .p#{$infix}-#{$n} {
        @include mixins.padding($size);
      }

      .pt#{$infix}-#{$n} {
        @include mixins.padding-top($size);
      }

      .pe#{$infix}-#{$n} {
        @include mixins.padding-end($size);
      }

      .pb#{$infix}-#{$n} {
        @include mixins.padding-bottom($size);
      }

      .ps#{$infix}-#{$n} {
        @include mixins.padding-start($size);
      }

      .px#{$infix}-#{$n} {
        @include mixins.padding-horizontal($size);
      }

      .py#{$infix}-#{$n} {
        @include mixins.padding-vertical($size);
      }

      // Margins.

      .m#{$infix}-#{$n} {
        @include mixins.margin($size);
      }

      .mt#{$infix}-#{$n} {
        @include mixins.margin-top($size);
      }

      .me#{$infix}-#{$n} {
        @include mixins.margin-end($size);
      }

      .mb#{$infix}-#{$n} {
        @include mixins.margin-bottom($size);
      }

      .ms#{$infix}-#{$n} {
        @include mixins.margin-start($size);
      }

      .mx#{$infix}-#{$n} {
        @include mixins.margin-horizontal($size);
      }

      .my#{$infix}-#{$n} {
        @include mixins.margin-vertical($size);
      }

    }

    // Negative margins.

    @if $negative-spacers {

      @each $n, $size in $negative-spacers {

        .m#{$infix}-#{$n} {
          @include mixins.margin($size);
        }

        .mt#{$infix}-#{$n} {
          @include mixins.margin-top($size);
        }

        .me#{$infix}-#{$n} {
          @include mixins.margin-end($size);
        }

        .mb#{$infix}-#{$n} {
          @include mixins.margin-bottom($size);
        }

        .ms#{$infix}-#{$n} {
          @include mixins.margin-start($size);
        }

        .mx#{$infix}-#{$n} {
          @include mixins.margin-horizontal($size);
        }

        .my#{$infix}-#{$n} {
          @include mixins.margin-vertical($size);
        }

      }

    }

    // Horizontal margin `auto`.

    .me#{$infix}-auto {
      @include mixins.margin-end(auto);
    }

    .ms#{$infix}-auto {
      @include mixins.margin-start(auto);
    }

    .mx#{$infix}-auto {
      @include mixins.margin-horizontal(auto);
    }

  }

}
