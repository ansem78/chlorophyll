/*

  PADDING, MARGIN

  Base:
    p = padding
    m = margin

  Modifiers:
    (none) = all
    t = top
    r = right
    b = bottom
    l = left
    x = horizontal (right and left)
    y = vertical (top and bottom)

*/

@use "../config";
@use "../helpers";
@use "../mixins";

$spacer: config.$spacer;
$spacers: config.$spacers;
$negative-spacers: if(config.$enable-negative-margins, helpers.negativify-map($spacers), null);
$breakpoints: map-keys(config.$breakpoints);

@each $name in $breakpoints {

  @include mixins.media-breakpoint-up($name) {

    $infix: mixins.breakpoint-infix($name);

    @each $n, $size in $spacers {

      // Paddings.

      .p#{$infix}-#{$n} {
        @include mixins.padding($size);
      }

      .pt#{$infix}-#{$n} {
        @include mixins.padding-top($size);
      }

      .pr#{$infix}-#{$n} {
        @include mixins.padding-right($size);
      }

      .pb#{$infix}-#{$n} {
        @include mixins.padding-bottom($size);
      }

      .pl#{$infix}-#{$n} {
        @include mixins.padding-left($size);
      }

      .px#{$infix}-#{$n} {
        @include mixins.padding-horizontal($size);
      }

      .py#{$infix}-#{$n} {
        @include mixins.padding-vertical($size);
      }

      // Margins.

      .m#{$infix}-#{$n} {
        @include mixins.margin($size);
      }

      .mt#{$infix}-#{$n} {
        @include mixins.margin-top($size);
      }

      .mr#{$infix}-#{$n} {
        @include mixins.margin-right($size);
      }

      .mb#{$infix}-#{$n} {
        @include mixins.margin-bottom($size);
      }

      .ml#{$infix}-#{$n} {
        @include mixins.margin-left($size);
      }

      .mx#{$infix}-#{$n} {
        @include mixins.margin-horizontal($size);
      }

      .my#{$infix}-#{$n} {
        @include mixins.margin-vertical($size);
      }

    }

    // Negative margins.

    @if $negative-spacers {

      @each $n, $size in $negative-spacers {

        .m#{$infix}-#{$n} {
          @include mixins.margin($size);
        }

        .mt#{$infix}-#{$n} {
          @include mixins.margin-top($size);
        }

        .mr#{$infix}-#{$n} {
          @include mixins.margin-right($size);
        }

        .mb#{$infix}-#{$n} {
          @include mixins.margin-bottom($size);
        }

        .ml#{$infix}-#{$n} {
          @include mixins.margin-left($size);
        }

        .mx#{$infix}-#{$n} {
          @include mixins.margin-horizontal($size);
        }

        .my#{$infix}-#{$n} {
          @include mixins.margin-vertical($size);
        }

      }

    }

    // Horizontal margin `auto`.

    .mr#{$infix}-auto {
      @include mixins.margin-right(auto);
    }

    .ml#{$infix}-auto {
      @include mixins.margin-left(auto);
    }

    .mx#{$infix}-auto {
      @include mixins.margin-horizontal(auto);
    }

  }

}
