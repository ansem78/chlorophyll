/*

  ANIMATIONS

  Set the element you want to animate with `a-init` and extend it with the desired animation effect class. You can extend it furthermore with classes to control animation
  delay, status, duration, direction, fill mode and repeat count.

  Base:
    a = animate

  Modifiers:
    repeat = animation repeat count
    duration = animation duration
    delay = animation delay

*/

@use '../config';
@use '../animations';

@if config.$enable-animate {

  .a-init {
    animation-duration: var(--animate-duration);
    animation-delay: var(--animate-delay);
    animation-iteration-count: var(--animate-repeat);
    animation-fill-mode: both;
    animation-direction: normal;
    animation-play-state: running;
  }

  .a-normal {
    animation-direction: normal;
  }

  .a-reverse {
    animation-direction: reverse;
  }

  .a-alternate {
    animation-direction: alternate;
  }

  .a-alternate-reverse {
    animation-direction: alternate-reverse;
  }

  .a-play {
    animation-play-state: running;
  }

  .a-pause {
    animation-play-state: paused;
  }

  .a-infinite {
    animation-iteration-count: infinite;
  }

  @for $n from 2 to 5 {

    .a-repeat-#{$n} {
      animation-iteration-count: calc(var(--animate-repeat) * #{$n});
    }

  }

  @each $key, $n in config.$animate-durations {

    .a-duration-#{$key} {
      animation-duration: calc(var(--animate-duration) * #{$n});
    }

  }

  @for $n from 2 to 5 {

    .a-delay-#{$n} {
      animation-delay: calc(var(--animate-delay) * #{$n});
    }

  }

  @media print, (prefers-reduced-motion: reduce) {

    .a-init {
      animation-duration: 1ms !important;
      transition-duration: 1ms !important;
      animation-iteration-count: 1 !important;
    }

    .a-init[class*="out"] {
      opacity: 0;
    }

  }

}
