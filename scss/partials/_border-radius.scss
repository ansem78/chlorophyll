/*

  BORDER RADIUS

  Base:
    br = border-radius

  Modifiers:
    (none) = all
    t = top
    e = end (right: ltr, left: rtl)
    b = bottom
    s = start (left: ltr, right: rtl)

*/

@use '../config';
@use '../mixins';

@if config.$enable-border-radius {

  @for $n from 0 through 5 {

    .br-#{$n} {
      border-radius: calc(var(--border-radius) * #{$n});
    }

    .br-ts-#{$n}, .br-st-#{$n} {
      border-top-left-radius: calc(var(--border-radius) * #{$n});
    }

    .br-te-#{$n}, .br-et-#{$n} {
      border-top-right-radius: calc(var(--border-radius) * #{$n});
    }

    .br-be-#{$n}, .br-eb-#{$n} {
      border-bottom-right-radius: calc(var(--border-radius) * #{$n});
    }

    .br-bs-#{$n}, .br-sb-#{$n} {
      border-bottom-left-radius: calc(var(--border-radius) * #{$n});
    }

    .br-t-#{$n} {
      border-top-left-radius: calc(var(--border-radius) * #{$n});
      border-top-right-radius: calc(var(--border-radius) * #{$n});
    }

    .br-e-#{$n} {
      border-top-right-radius: calc(var(--border-radius) * #{$n});
      border-bottom-right-radius: calc(var(--border-radius) * #{$n});
    }

    .br-b-#{$n} {
      border-bottom-right-radius: calc(var(--border-radius) * #{$n});
      border-bottom-left-radius: calc(var(--border-radius) * #{$n});
    }

    .br-s-#{$n} {
      border-top-left-radius: calc(var(--border-radius) * #{$n});
      border-bottom-left-radius: calc(var(--border-radius) * #{$n});
    }

  }

}

// Box with predefined rounded corners.
.rounded {
  border-radius: var(--border-radius-rounded);
}

// Circular box.
.circle {
  border-radius: 50%;
}

// Make a box like a pill.
.pill {
  border-radius: 9999px;
}
